# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

# Guidelines (https://marketplace.visualstudio.com/items?itemName=Ivan.EditorConfigGuidelines)
[*]
guidelines = 140 solid

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = false:warning
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true:silent

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = true:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = false:warning
csharp_style_prefer_pattern_matching = false
csharp_style_prefer_switch_expression = false:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
csharp_style_prefer_readonly_struct = true
csharp_style_prefer_readonly_struct_member = true

# Code-block preferences
csharp_prefer_braces = when_multiline:warning
csharp_prefer_simple_using_statement = false:warning
csharp_style_namespace_declarations = block_scoped:error
csharp_style_prefer_method_group_conversion = true
csharp_style_prefer_top_level_statements = true

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = false:warning
csharp_style_inlined_variable_declaration = true
csharp_style_prefer_index_operator = false:warning
csharp_style_prefer_local_over_anonymous_function = false
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = false:warning
csharp_style_prefer_tuple_swap = true
csharp_style_prefer_utf8_string_literals = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:error

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = false:suggestion

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.class__namespace__function__property_should_be_pascalcase.severity = warning
dotnet_naming_rule.class__namespace__function__property_should_be_pascalcase.symbols = class__namespace__function__property
dotnet_naming_rule.class__namespace__function__property_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.interface_should_be_ipascalcase.severity = warning
dotnet_naming_rule.interface_should_be_ipascalcase.symbols = interface
dotnet_naming_rule.interface_should_be_ipascalcase.style = ipascalcase

dotnet_naming_rule.enums_should_be_epascalcase.severity = silent
dotnet_naming_rule.enums_should_be_epascalcase.symbols = enums
dotnet_naming_rule.enums_should_be_epascalcase.style = epascalcase

dotnet_naming_rule.enums_should_be_fpascalcase.severity = silent
dotnet_naming_rule.enums_should_be_fpascalcase.symbols = enums
dotnet_naming_rule.enums_should_be_fpascalcase.style = fpascalcase

dotnet_naming_rule.delegate_should_be_pascalcasedelegate.severity = warning
dotnet_naming_rule.delegate_should_be_pascalcasedelegate.symbols = delegate
dotnet_naming_rule.delegate_should_be_pascalcasedelegate.style = pascalcasedelegate

dotnet_naming_rule.public_event_should_be_onpascalcase.severity = warning
dotnet_naming_rule.public_event_should_be_onpascalcase.symbols = public_event
dotnet_naming_rule.public_event_should_be_onpascalcase.style = onpascalcase

dotnet_naming_rule.private_event_should_be__onpascalcase.severity = warning
dotnet_naming_rule.private_event_should_be__onpascalcase.symbols = private_event
dotnet_naming_rule.private_event_should_be__onpascalcase.style = _onpascalcase

dotnet_naming_rule.type_parameter_should_be_tpascalcase.severity = warning
dotnet_naming_rule.type_parameter_should_be_tpascalcase.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_tpascalcase.style = tpascalcase

dotnet_naming_rule.constant_should_be_pascalcase.severity = warning
dotnet_naming_rule.constant_should_be_pascalcase.symbols = constant
dotnet_naming_rule.constant_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_field_should_be_pascalcase.severity = warning
dotnet_naming_rule.public_field_should_be_pascalcase.symbols = public_field
dotnet_naming_rule.public_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_static_readonly_field_should_be_pascalcase.severity = warning
dotnet_naming_rule.public_static_readonly_field_should_be_pascalcase.symbols = public_static_readonly_field
dotnet_naming_rule.public_static_readonly_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_static_field_should_be_s_camelcase.severity = warning
dotnet_naming_rule.private_static_field_should_be_s_camelcase.symbols = private_static_field
dotnet_naming_rule.private_static_field_should_be_s_camelcase.style = s_camelcase

dotnet_naming_rule.private_field_should_be__camelcase.severity = warning
dotnet_naming_rule.private_field_should_be__camelcase.symbols = private_field
dotnet_naming_rule.private_field_should_be__camelcase.style = _camelcase

# Symbol specifications

dotnet_naming_symbols.class__namespace__function__property.applicable_kinds = namespace, property, class, struct, method, local_function
dotnet_naming_symbols.class__namespace__function__property.applicable_accessibilities = *
dotnet_naming_symbols.class__namespace__function__property.required_modifiers = 

dotnet_naming_symbols.public_field.applicable_kinds = field
dotnet_naming_symbols.public_field.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_field.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = internal, private, private_protected, local
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.private_static_field.applicable_kinds = field
dotnet_naming_symbols.private_static_field.applicable_accessibilities = internal, private, private_protected, local
dotnet_naming_symbols.private_static_field.required_modifiers = static

dotnet_naming_symbols.constant.applicable_kinds = *
dotnet_naming_symbols.constant.applicable_accessibilities = *
dotnet_naming_symbols.constant.required_modifiers = const

dotnet_naming_symbols.public_event.applicable_kinds = event
dotnet_naming_symbols.public_event.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_event.required_modifiers = 

dotnet_naming_symbols.private_event.applicable_kinds = event
dotnet_naming_symbols.private_event.applicable_accessibilities = internal, private, private_protected, local
dotnet_naming_symbols.private_event.required_modifiers = 

dotnet_naming_symbols.delegate.applicable_kinds = delegate
dotnet_naming_symbols.delegate.applicable_accessibilities = *
dotnet_naming_symbols.delegate.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.enums.applicable_kinds = enum
dotnet_naming_symbols.enums.applicable_accessibilities = *
dotnet_naming_symbols.enums.required_modifiers = 

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *
dotnet_naming_symbols.type_parameter.required_modifiers = 

dotnet_naming_symbols.public_static_readonly_field.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_field.applicable_accessibilities = *
dotnet_naming_symbols.public_static_readonly_field.required_modifiers = readonly, static

# Naming styles

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix = 
dotnet_naming_style._camelcase.word_separator = 
dotnet_naming_style._camelcase.capitalization = camel_case

dotnet_naming_style.s_camelcase.required_prefix = s_
dotnet_naming_style.s_camelcase.required_suffix = 
dotnet_naming_style.s_camelcase.word_separator = 
dotnet_naming_style.s_camelcase.capitalization = camel_case

dotnet_naming_style.epascalcase.required_prefix = E
dotnet_naming_style.epascalcase.required_suffix = 
dotnet_naming_style.epascalcase.word_separator = 
dotnet_naming_style.epascalcase.capitalization = pascal_case

dotnet_naming_style.fpascalcase.required_prefix = F
dotnet_naming_style.fpascalcase.required_suffix = 
dotnet_naming_style.fpascalcase.word_separator = 
dotnet_naming_style.fpascalcase.capitalization = pascal_case

dotnet_naming_style.ipascalcase.required_prefix = I
dotnet_naming_style.ipascalcase.required_suffix = 
dotnet_naming_style.ipascalcase.word_separator = 
dotnet_naming_style.ipascalcase.capitalization = pascal_case

dotnet_naming_style.pascalcasedelegate.required_prefix = 
dotnet_naming_style.pascalcasedelegate.required_suffix = Delegate
dotnet_naming_style.pascalcasedelegate.word_separator = 
dotnet_naming_style.pascalcasedelegate.capitalization = pascal_case

dotnet_naming_style.onpascalcase.required_prefix = On
dotnet_naming_style.onpascalcase.required_suffix = 
dotnet_naming_style.onpascalcase.word_separator = 
dotnet_naming_style.onpascalcase.capitalization = pascal_case

dotnet_naming_style._onpascalcase.required_prefix = _on
dotnet_naming_style._onpascalcase.required_suffix = 
dotnet_naming_style._onpascalcase.word_separator = 
dotnet_naming_style._onpascalcase.capitalization = pascal_case

dotnet_naming_style.tpascalcase.required_prefix = T
dotnet_naming_style.tpascalcase.required_suffix = 
dotnet_naming_style.tpascalcase.word_separator = 
dotnet_naming_style.tpascalcase.capitalization = pascal_case
